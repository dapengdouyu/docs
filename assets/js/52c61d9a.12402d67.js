"use strict";(self.webpackChunkdapengdouyu=self.webpackChunkdapengdouyu||[]).push([[8131],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},p=Object.keys(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,p=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),d=l(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||p;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var p=n.length,i=new Array(p);i[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var l=2;l<p;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},42330:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return d}});var r=n(83117),o=n(80102),p=(n(67294),n(3905)),i=["components"],a={},c="\u81ea\u5b9a\u4e49\u7c7b\u578b",l={unversionedId:"program/typescript/10\u3001\u81ea\u5b9a\u4e49\u5c5e\u6027",id:"program/typescript/10\u3001\u81ea\u5b9a\u4e49\u5c5e\u6027",title:"\u81ea\u5b9a\u4e49\u7c7b\u578b",description:"utility-types",source:"@site/docs/program/typescript/10\u3001\u81ea\u5b9a\u4e49\u5c5e\u6027.md",sourceDirName:"program/typescript",slug:"/program/typescript/10\u3001\u81ea\u5b9a\u4e49\u5c5e\u6027",permalink:"/docs/program/typescript/10\u3001\u81ea\u5b9a\u4e49\u5c5e\u6027",editUrl:"https://github.com/dapengdouyu/docs/tree/master/docs/program/typescript/10\u3001\u81ea\u5b9a\u4e49\u5c5e\u6027.md",tags:[],version:"current",lastUpdatedAt:1639467634,formattedLastUpdatedAt:"12/14/2021",frontMatter:{},sidebar:"program",previous:{title:"\u5185\u7f6e\u7c7b\u578b",permalink:"/docs/program/typescript/9\u3001\u5185\u7f6e\u7c7b\u578b"},next:{title:"unknown",permalink:"/docs/program/typescript/11\u3001unknown"}},s=[{value:"<code>Diff</code> \u5b9e\u73b0",id:"diff-\u5b9e\u73b0",children:[],level:2},{value:"<code>InterSection</code>\u4ea4\u96c6",id:"intersection\u4ea4\u96c6",children:[],level:2},{value:"<code>Overwrite</code> \u5c5e\u6027\u8986\u76d6",id:"overwrite-\u5c5e\u6027\u8986\u76d6",children:[],level:2},{value:"<code>Merge</code> \u5bf9\u8c61\u5408\u5e76",id:"merge-\u5bf9\u8c61\u5408\u5e76",children:[],level:2}],u={toc:s};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,p.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"\u81ea\u5b9a\u4e49\u7c7b\u578b"},"\u81ea\u5b9a\u4e49\u7c7b\u578b"),(0,p.kt)("p",null,(0,p.kt)("img",{parentName:"p",src:"https://github.com/piotrwitek/utility-types",alt:"utility-types"})),(0,p.kt)("h2",{id:"diff-\u5b9e\u73b0"},(0,p.kt)("inlineCode",{parentName:"h2"},"Diff")," \u5b9e\u73b0"),(0,p.kt)("p",null,"\u6c42\u4e24\u4e2a\u5bf9\u8c61",(0,p.kt)("inlineCode",{parentName:"p"},"\u4e0d\u540c"),"\u7684\u90e8\u5206"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-ts"},'let person1 = {\n  name: "dapeng",\n  age: 11,\n  address: "\u5317\u4eac",\n};\nlet person2 = {\n  address: "\u5317\u4eac",\n};\ntype Diff<T extends object, K extends object> = Omit<T, keyof K>;\ntype DiffPerson = Diff<typeof person1, typeof person2>;\n')),(0,p.kt)("h2",{id:"intersection\u4ea4\u96c6"},(0,p.kt)("inlineCode",{parentName:"h2"},"InterSection"),"\u4ea4\u96c6"),(0,p.kt)("p",null,"\u6c42\u4e24\u4e2a\u5bf9\u8c61",(0,p.kt)("inlineCode",{parentName:"p"},"\u76f8\u540c"),"\u7684\u90e8\u5206"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-ts"},'let person1 = {\n  name: "dapeng",\n  age: 11,\n  address: "\u5317\u4eac",\n};\nlet person2 = {\n  address: "\u5317\u4eac",\n};\ntype InterSection<T extends object, K extends object> = Pick<\n  T,\n  Extract<keyof T, keyof K>\n>;\ntype InterSectionPerson = InterSection<typeof person1, typeof person2>;\n')),(0,p.kt)("h2",{id:"overwrite-\u5c5e\u6027\u8986\u76d6"},(0,p.kt)("inlineCode",{parentName:"h2"},"Overwrite")," \u5c5e\u6027\u8986\u76d6"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-ts"},"type OldProps = { name: string; age: number; visible: boolean };\ntype NewProps = { age: string; other: string };\n\ntype Diff<T extends object, K extends Object> = Omit<T, keyof K>;\ntype InterSection<T extends object, K extends object> = Pick<\n  T,\n  Extract<keyof T, keyof K>\n>;\ntype Overwrite<\n  T extends object,\n  K extends object,\n  I = Diff<T, K> & InterSection<K, T>\n> = Pick<I, keyof I>;\ntype ReplaceProps = Overwrite<OldProps, NewProps>;\n")),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"\u5982\u679c\u5b58\u5728\u5df2\u6709\u5c5e\u6027\u5219\u4f7f\u7528\u65b0\u5c5e\u6027\u7c7b\u578b\u8fdb\u884c\u8986\u76d6\u64cd\u4f5c")),(0,p.kt)("h2",{id:"merge-\u5bf9\u8c61\u5408\u5e76"},(0,p.kt)("inlineCode",{parentName:"h2"},"Merge")," \u5bf9\u8c61\u5408\u5e76"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-ts"},"type Compute<A extends any> = { [K in keyof A]: A[K] };\ntype Merge<T, K> = Compute<Omit<T, keyof K> & K>;\ntype MergeObj = Merge<OldProps, NewProps>;\n")),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"\u5c06\u4e24\u4e2a\u5bf9\u8c61\u7c7b\u578b\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c")))}d.isMDXComponent=!0}}]);