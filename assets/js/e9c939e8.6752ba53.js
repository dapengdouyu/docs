"use strict";(self.webpackChunkdapengdouyu=self.webpackChunkdapengdouyu||[]).push([[9620],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return u}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(t),u=a,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return t?r.createElement(h,s(s({ref:n},p),{},{components:t})):r.createElement(h,s({ref:n},p))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},86257:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var r=t(83117),a=t(80102),i=(t(67294),t(3905)),s=["components"],o={},l=void 0,c={unversionedId:"program/react/setState",id:"program/react/setState",title:"setState",description:"\u539f\u751f JS \u5b9e\u73b0\u8ba1\u6570\u5668",source:"@site/docs/program/react/setState.md",sourceDirName:"program/react",slug:"/program/react/setState",permalink:"/docs/program/react/setState",editUrl:"https://github.com/dapengdouyu/docs/tree/master/docs/program/react/setState.md",tags:[],version:"current",lastUpdatedAt:1639985762,formattedLastUpdatedAt:"12/20/2021",frontMatter:{},sidebar:"program",previous:{title:"redux",permalink:"/docs/program/react/redux"},next:{title:"index",permalink:"/docs/program/rollup/"}},p=[{value:"\u539f\u751f JS \u5b9e\u73b0\u8ba1\u6570\u5668",id:"\u539f\u751f-js-\u5b9e\u73b0\u8ba1\u6570\u5668",children:[],level:2},{value:"HTML \u7ed3\u6784\u7684\u590d\u7528",id:"html-\u7ed3\u6784\u7684\u590d\u7528",children:[{value:"index.html",id:"indexhtml",children:[],level:3},{value:"index.js",id:"indexjs",children:[],level:3}],level:2},{value:"\u751f\u6210 DOM \u5143\u7d20\u5e76\u6dfb\u52a0\u4e8b\u4ef6",id:"\u751f\u6210-dom-\u5143\u7d20\u5e76\u6dfb\u52a0\u4e8b\u4ef6",children:[{value:"index.html",id:"indexhtml-1",children:[],level:3},{value:"index.js",id:"indexjs-1",children:[],level:3}],level:2},{value:"\u62bd\u8c61 Component",id:"\u62bd\u8c61-component",children:[{value:"index.html",id:"indexhtml-2",children:[],level:3},{value:"index.js",id:"indexjs-2",children:[],level:3}],level:2},{value:"setState \u53ef\u80fd\u662f\u5f02\u6b65\u7684",id:"setstate-\u53ef\u80fd\u662f\u5f02\u6b65\u7684",children:[{value:"index.html",id:"indexhtml-3",children:[],level:3},{value:"index.js",id:"indexjs-3",children:[],level:3}],level:2},{value:"\u4e8b\u52a1",id:"\u4e8b\u52a1",children:[{value:"transaction",id:"transaction",children:[],level:3},{value:"index.js",id:"indexjs-4",children:[],level:3}],level:2}],d={toc:p};function m(e){var n=e.components,o=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u539f\u751f-js-\u5b9e\u73b0\u8ba1\u6570\u5668"},"\u539f\u751f JS \u5b9e\u73b0\u8ba1\u6570\u5668"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <button id="counter-btn"></button>\n\n  <script>\n    let counterBtn = document.getElementById("counter-btn");\n    let number = 0;\n    counterBtn.addEventListener("click", function() {\n      counterBtn.innerHTML = ++number;\n    });\n  <\/script>\n</body>\n')),(0,i.kt)("h2",{id:"html-\u7ed3\u6784\u7684\u590d\u7528"},"HTML \u7ed3\u6784\u7684\u590d\u7528"),(0,i.kt)("h3",{id:"indexhtml"},"index.html"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <div id="counter-app"></div>\n  <script src="index.js"><\/script>\n  <script>\n    let counterApp = document.getElementById("counter-app");\n    counterApp.innerHTML = new Counter().render();\n  <\/script>\n</body>\n')),(0,i.kt)("h3",{id:"indexjs"},"index.js"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'class Counter {\n  render() {\n    return `\n          <button id="counter-btn">\n            0\n          </button>\n          `;\n  }\n}\n')),(0,i.kt)("h2",{id:"\u751f\u6210-dom-\u5143\u7d20\u5e76\u6dfb\u52a0\u4e8b\u4ef6"},"\u751f\u6210 DOM \u5143\u7d20\u5e76\u6dfb\u52a0\u4e8b\u4ef6"),(0,i.kt)("h3",{id:"indexhtml-1"},"index.html"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <div id="counter-app"></div>\n\n  <script src="index.js"><\/script>\n  <script>\n    let counterApp = document.getElementById("counter-app");\n    counterApp.appendChild(new Counter().render());\n  <\/script>\n</body>\n')),(0,i.kt)("h3",{id:"indexjs-1"},"index.js"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'class Counter {\n  constructor() {\n    this.state = { number: 0 };\n  }\n  createDOMFromString(domString) {\n    const div = document.createElement("div");\n    div.innerHTML = domString;\n    return div.children[0];\n  }\n  increment() {\n    this.state = { number: this.state.number + 1 };\n    let oldElement = this.domElement;\n    let newElement = this.render();\n    oldElement.parentElement.replaceChild(newElement, oldElement);\n  }\n  render() {\n    this.domElement = this.createDOMFromString(`\n     <button id="counter-btn">\n        ${this.state.number}\n     </button>\n     `);\n    this.domElement.addEventListener("click", this.increment.bind(this));\n    return this.domElement;\n  }\n}\n')),(0,i.kt)("h2",{id:"\u62bd\u8c61-component"},"\u62bd\u8c61 Component"),(0,i.kt)("h3",{id:"indexhtml-2"},"index.html"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <div id="counter-app"></div>\n  <script src="index.js"><\/script>\n  <script>\n    let counterApp = document.getElementById("counter-app");\n    new Counter({ name: "\u73e0\u5cf0\u67b6\u6784" }).mount(counterApp);\n  <\/script>\n</body>\n')),(0,i.kt)("h3",{id:"indexjs-2"},"index.js"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'window.trigger = function(event, name) {\n  let component = event.target.component;\n  component[name].call(component, event);\n};\nclass Component {\n  constructor(props) {\n    this.props = props;\n  }\n  createDOMFromString(domString) {\n    const div = document.createElement("div");\n    div.innerHTML = domString;\n    return div.children[0];\n  }\n  setState(partialState) {\n    this.state = Object.assign(this.state, partialState);\n    let oldElement = this.domElement;\n    let newElement = this.renderElement();\n    oldElement.parentElement.replaceChild(newElement, oldElement);\n  }\n  renderElement() {\n    let renderString = this.render();\n    this.domElement = this.createDOMFromString(renderString);\n    this.domElement.component = this;\n    return this.domElement;\n  }\n  mount(container) {\n    container.appendChild(this.renderElement());\n  }\n}\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { number: 0 };\n  }\n  increment() {\n    this.setState({ number: this.state.number + 1 });\n    console.log(this.state);\n    this.setState({ number: this.state.number + 1 });\n    console.log(this.state);\n    setTimeout(() => {\n      this.setState({ number: this.state.number + 1 });\n      console.log(this.state);\n      this.setState({ number: this.state.number + 1 });\n      console.log(this.state);\n    }, 1000);\n  }\n  render() {\n    return `\n        <button id="counter-btn" onclick="trigger(event,\'increment\')">\n         ${this.props.name}:${this.state.number}\n        </button>\n        `;\n  }\n}\n')),(0,i.kt)("h2",{id:"setstate-\u53ef\u80fd\u662f\u5f02\u6b65\u7684"},"setState \u53ef\u80fd\u662f\u5f02\u6b65\u7684"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/35962a00084382b49d1f9e3bd36612925f360e5b/src/renderers/shared/reconciler/ReactUpdates.js#L199"},"setState \u6e90\u7801")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{alt:"setState",src:t(20238).Z}))),(0,i.kt)("h3",{id:"indexhtml-3"},"index.html"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <div id="counter-app"></div>\n  <script src="index.js"><\/script>\n  <script>\n    let counterApp = document.getElementById("counter-app");\n    new Counter({ name: "\u73e0\u5cf0\u67b6\u6784" }).mount(counterApp);\n  <\/script>\n</body>\n')),(0,i.kt)("h3",{id:"indexjs-3"},"index.js"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'let batchingStrategy = {\n  isBatchingUpdates: false,\n  updaters: [],\n  batchedUpdates() {\n    this.updaters.forEach((updater) => {\n      updater.component.updateComponent();\n    });\n  },\n};\nclass Updater {\n  constructor(component) {\n    this.component = component;\n    this.pendingStates = [];\n  }\n  addState(particalState) {\n    this.pendingStates.push(particalState);\n    batchingStrategy.isBatchingUpdates\n      ? batchingStrategy.updaters.push(this)\n      : this.component.updateComponent();\n  }\n}\nlet transaction = new Transaction({\n  initialize() {\n    batchingStrategy.isBatchingUpdates = true;\n  },\n  close() {\n    batchingStrategy.isBatchingUpdates = false;\n    batchingStrategy.batchedUpdates();\n  },\n});\nwindow.trigger = function(event, name) {\n  batchingStrategy.isBatchingUpdates = true;\n  let component = event.target.component;\n  component[name].bind(component, event);\n  batchingStrategy.isBatchingUpdates = false;\n  batchingStrategy.batchedUpdates();\n};\nclass Component {\n  constructor(props) {\n    this.props = props;\n    this.$updater = new Updater(this);\n  }\n  createDOMFromString(domString) {\n    const div = document.createElement("div");\n    div.innerHTML = domString;\n    return div.children[0];\n  }\n  setState(particalState) {\n    this.$updater.addState(particalState);\n  }\n  updateComponent() {\n    let pendingStates = this.$updater.pendingStates;\n    pendingStates.forEach((particalState) =>\n      Object.assign(this.state, particalState)\n    );\n    this.$updater.pendingStates.length = 0;\n    let oldElement = this.domElement;\n    let newElement = this.renderElement();\n    oldElement.parentElement.replaceChild(newElement, oldElement);\n  }\n  renderElement() {\n    let renderString = this.render();\n    this.domElement = this.createDOMFromString(renderString);\n    this.domElement.component = this;\n    return this.domElement;\n  }\n  mount(container) {\n    container.appendChild(this.renderElement());\n  }\n}\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { number: 0 };\n  }\n  increment() {\n    this.setState({ number: this.state.number + 1 });\n    console.log(this.state);\n    this.setState({ number: this.state.number + 1 });\n    console.log(this.state);\n    setTimeout(() => {\n      this.setState({ number: this.state.number + 1 });\n      console.log(this.state);\n      this.setState({ number: this.state.number + 1 });\n      console.log(this.state);\n    }, 1000);\n  }\n  render() {\n    return `\n        <button id="counter-btn" onclick="trigger(event,\'increment\')">\n         ${this.props.name}:${this.state.number}\n        </button>\n        `;\n  }\n}\n')),(0,i.kt)("h2",{id:"\u4e8b\u52a1"},"\u4e8b\u52a1"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/blob/6d5fe44c8602f666a043a4117ccc3bdb29b86e78/src/shared/utils/Transaction.js"},"\u6e90\u7801")),(0,i.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u6240\u8c13\u7684 Transaction \u5c31\u662f\u5c06\u9700\u8981\u6267\u884c\u7684 method \u4f7f\u7528 wrapper \u5c01\u88c5\u8d77\u6765\uff0c\u518d\u901a\u8fc7 Transaction \u63d0\u4f9b\u7684 perform \u65b9\u6cd5\u6267\u884c"),(0,i.kt)("li",{parentName:"ul"},"\u800c\u5728 perform \u4e4b\u524d\uff0c\u5148\u6267\u884c\u6240\u6709 wrapper \u4e2d\u7684 initialize \u65b9\u6cd5\uff1bperform \u5b8c\u6210\u4e4b\u540e\uff08\u5373 method \u6267\u884c\u540e\uff09\u518d\u6267\u884c\u6240\u6709\u7684 close \u65b9\u6cd5"),(0,i.kt)("li",{parentName:"ul"},"\u4e00\u7ec4 initialize \u53ca close \u65b9\u6cd5\u79f0\u4e3a\u4e00\u4e2a wrapper")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"/*\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +-----------------\x3e|-|---|-|---|--\x3e|anyMethod|---|---|-|---|-|--------\x3e\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n *\n */\n")),(0,i.kt)("h3",{id:"transaction"},"transaction"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'function setState() {\n  console.log("setState");\n}\nclass Transaction {\n  constructor(wrappers) {\n    this.wrappers = wrappers;\n  }\n  perform(func) {\n    this.wrappers.forEach((wrapper) => wrapper.initialize());\n    func.call();\n    this.wrappers.forEach((wrapper) => wrapper.close());\n  }\n}\nlet transaction = new Transaction([\n  {\n    initialize() {\n      console.log("before1");\n    },\n    close() {\n      console.log("after1");\n    },\n  },\n  {\n    initialize() {\n      console.log("before2");\n    },\n    close() {\n      console.log("after2");\n    },\n  },\n]);\ntransaction.perform(setState);\n')),(0,i.kt)("h3",{id:"indexjs-4"},"index.js"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'class Transaction {\n  constructor(wrapper) {\n    this.wrapper = wrapper;\n  }\n  perform(func) {\n    this.wrapper.initialize();\n    func.call();\n    this.wrapper.close();\n  }\n}\nlet batchingStrategy = {\n  isBatchingUpdates: false,\n  updaters: [],\n  batchedUpdates() {\n    this.updaters.forEach((updater) => {\n      updater.component.updateComponent();\n    });\n  },\n};\nclass Updater {\n  constructor(component) {\n    this.component = component;\n    this.pendingStates = [];\n  }\n  addState(particalState) {\n    this.pendingStates.push(particalState);\n    batchingStrategy.isBatchingUpdates\n      ? batchingStrategy.updaters.push(this)\n      : this.component.updateComponent();\n  }\n}\nlet transaction = new Transaction({\n  initialize() {\n    batchingStrategy.isBatchingUpdates = true;\n  },\n  close() {\n    batchingStrategy.isBatchingUpdates = false;\n    batchingStrategy.batchedUpdates();\n  },\n});\nwindow.trigger = function(event, name) {\n  let component = event.target.component;\n  transaction.perform(component[name].bind(component, event));\n};\nclass Component {\n  constructor(props) {\n    this.props = props;\n    this.$updater = new Updater(this);\n  }\n  createDOMFromString(domString) {\n    const div = document.createElement("div");\n    div.innerHTML = domString;\n    return div.children[0];\n  }\n  setState(particalState) {\n    this.$updater.addState(particalState);\n  }\n  updateComponent() {\n    let pendingStates = this.$updater.pendingStates;\n    pendingStates.forEach((particalState) =>\n      Object.assign(this.state, particalState)\n    );\n    this.$updater.pendingStates.length = 0;\n    let oldElement = this.domElement;\n    let newElement = this.renderElement();\n    oldElement.parentElement.replaceChild(newElement, oldElement);\n  }\n  renderElement() {\n    let renderString = this.render();\n    this.domElement = this.createDOMFromString(renderString);\n    this.domElement.component = this;\n    return this.domElement;\n  }\n  mount(container) {\n    container.appendChild(this.renderElement());\n  }\n}\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { number: 0 };\n  }\n  increment() {\n    this.setState({ number: this.state.number + 1 });\n    console.log(this.state);\n    this.setState({ number: this.state.number + 1 });\n    console.log(this.state);\n    setTimeout(() => {\n      this.setState({ number: this.state.number + 1 });\n      console.log(this.state);\n      this.setState({ number: this.state.number + 1 });\n      console.log(this.state);\n    }, 1000);\n  }\n  render() {\n    return `\n        <button id="counter-btn" onclick="trigger(event,\'increment\')">\n         ${this.props.name}:${this.state.number}\n        </button>\n        `;\n  }\n}\n')))}m.isMDXComponent=!0},20238:function(e,n,t){n.Z=t.p+"assets/images/setState-921f2da1fc406097570e178c144009f8.png"}}]);